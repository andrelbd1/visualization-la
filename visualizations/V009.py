import dash
import dash_core_components as dcc
import dash_html_components as html
from dash.dependencies import Input, Output, State
import random

import plotly
import plotly.plotly as py
import plotly.tools as tls
import plotly.graph_objs as go

import visdcc

import pandas as pd
import numpy as np

import json

from plotly.utils import PlotlyJSONEncoder
from plotly.graph_objs import Figure, Layout, Bar, Table, Heatmap, Scatter, Box, Violin
from plotly.offline import init_notebook_mode, iplot

from sklearn import metrics

init_notebook_mode(connected=True) # initiate notebook for offline plot
plotly.__version__

class V009:
    NUMBER_ACTIONS = 20
    VIDEO_SIZE = 120
    RAWDATASET = pd.DataFrame()
    PROCDATASET = pd.DataFrame()
    SEEKDATASET = pd.DataFrame()

    _language = "pt"
    _type_result="jupyter-notebook"

    def __init__(self, language="pt", type_result = "jupyter-notebook"):
        self._language = language
        self._type_result = type_result

    def generate_dataset(self, number_actions = 100, video_size = 30, students_names = pd.DataFrame()):
        self.NUMBER_ACTIONS = number_actions
        self.VIDEO_SIZE = video_size


        if len(students_names.columns.tolist()) == 0:
            names = pd.read_csv("names.csv")
        else:
            names = students_names
        self.RAWDATASET = pd.DataFrame(columns=["Students","Action"])
        self.SEEKDATASET = pd.DataFrame(columns=["From","To"])
        self.PROCDATASET = pd.DataFrame(0, index= range(self.VIDEO_SIZE), columns=["Time","Play","Pause","Seek backward","Seek forward", "Dropout"])
        for i in range(0,self.VIDEO_SIZE): self.PROCDATASET.loc[i,"Time"] = i

        k = 0
        seekcount = 0

        rand_names = [names.group_name[np.random.randint(0,len(names.group_name)+1)] for n in range(0,(self.NUMBER_ACTIONS)*2)]
        rand_names.sort()

        for i in range(0,self.NUMBER_ACTIONS//5):
            playrequired = True
            currentTime = 0
            currentAction = 'none'


            for j in range(0,10):
                timeModifierFrom = int(currentTime + np.random.triangular(0, 0 ,self.VIDEO_SIZE - currentTime))
                timeModifierTo = int(np.random.triangular(0,currentTime,self.VIDEO_SIZE))

                self.RAWDATASET.loc[k,"Students"] = rand_names[i]

                if(playrequired == True):
                    playrequired = False
                    self.RAWDATASET.loc[k,"Action"] = 'Play at %ds'%currentTime
                    lastAction = 'Play'
                    self.PROCDATASET.loc[currentTime,"Play"] += 1

                elif(lastAction == 'Pause'):
                    currentAction = random.choice(['Play', 'Play', 'Seek'])

                    if(currentAction == 'Play'):
                        self.RAWDATASET.loc[k,"Action"] = 'Play at %ds'%currentTime
                        lastAction = 'Play'
                        self.PROCDATASET.loc[currentTime,"Play"] += 1

                    elif(currentAction == 'Seek'):
                        self.RAWDATASET.loc[k,"Action"] = 'Seek backward %ds to %ds'%(currentTime, timeModifierTo)
                        self.SEEKDATASET.loc[seekcount,"From"]= int(currentTime)
                        self.SEEKDATASET.loc[seekcount,"To"]= int(timeModifierTo)
                        seekcount +=1
                        currentTime = timeModifierTo
                        lastAction = 'Seek'


                else:
                    currentAction = random.choice(['Seek', 'Pause', 'Seek', 'Pause', 'Pause', 'Seek', 'Pause', 'Dropout'])

                    if(currentAction == 'Pause'):
                        self.RAWDATASET.loc[k,"Action"] = 'Pause at %ds'%timeModifierFrom
                        currentTime = timeModifierFrom
                        self.PROCDATASET.loc[currentTime,"Pause"] += 1
                        lastAction = 'Pause'

                    elif(currentAction == 'Seek'):
                        self.RAWDATASET.loc[k,"Action"] = 'Seek backward %ds to %ds'%(timeModifierFrom,timeModifierTo)
                        self.SEEKDATASET.loc[seekcount,"From"]= int(timeModifierFrom)
                        self.SEEKDATASET.loc[seekcount,"To"]= int(timeModifierTo)
                        seekcount +=1
                        currentTime = timeModifierTo
                        self.PROCDATASET.loc[timeModifierFrom,"Seek backward"] += 1
                        self.PROCDATASET.loc[timeModifierTo,"Seek forward"] += 1
                        lastAction = 'Seek'

                    elif(currentAction == 'Dropout'):
                        self.RAWDATASET.loc[k,"Action"] = 'Dropout at %ds'%currentTime
                        lastAction = 'Dropout'
                        self.PROCDATASET.loc[currentTime,"Dropout"] += 1
                        k+= 1

                        break

                k+= 1


        df = self.PROCDATASET
        df2 = df.set_index("Time")
        #x=df.index.get_level_values(0).values
        #y=df.iloc[:,2].tolist()


        frozenseek = self.SEEKDATASET
        #frozenseek.to_csv('outSEEK.csv')


    # Table presenting raw data
    def graph_01(self):
        legend = {"title":"Número de interações por tempo do vídeo"}
        if (self._language == "en"):
            legend = {"title":"Number of interaction by video time"}
        df = pd.read_csv("v009-RAW.csv")
        
        trace = [Table(
            header=dict(
                values=list(df.columns[:len(df.columns)]),
                fill = dict(color='#C2D4FF'),
                align = 'center'
            ),
            cells=dict(
                values=[df[i].tolist() for i in df.columns[:len(df.columns)]],
                fill = dict(color='#F5F8FF'),
                align = ['left','center']
            )
        )]

        data = trace
        layout = Layout( title = legend["title"] )
        
        fig = Figure(data=data, layout=layout)
        if self._type_result == "jupyter-notebook":
            iplot(data, filename = 'pandas_table')
        elif self._type_result == "dash":
            return dcc.Graph(
                id='V009@1',
                figure={"data": data}
            )
        elif self._type_result == "flask":
            modeBarButtonsToRemove = ['toImage', 'sendDataToCloud', 'hoverCompareCartesian', 'lasso2d', 'hoverClosestCartesian', 'toggleHover', 'hoverClosest3d', 'hoverClosestGeo', 'hoverClosestGl2d', 'hoverClosestPie']
            config = {"displaylogo": False, "responsive": True, "displayModeBar": True, "modeBarButtonsToRemove": modeBarButtonsToRemove}
            return {"id":"V009@1","layout":json.dumps({"data": data, "layout": layout, "config": config}, cls=PlotlyJSONEncoder)}

    # Table presenting processed data
    def graph_02(self):
        legend = {"title":"Número de interações por tempo do vídeo"}
        if (self._language == "en"):
            legend = {"title":"Number of interaction by video time"}
        df = pd.read_csv("v009-PROC.csv")

        trace = [Table(
            header=dict(
                values=list(df.columns[:len(df.columns)]),
                fill = dict(color='#C2D4FF'),
                align = 'center'
            ),
            cells=dict(
                values=[df[i].tolist() for i in df.columns[:len(df.columns)]],
                fill = dict(color='#F5F8FF'),
                align = ['left','center']
            )
        )]

        data = trace
        layout = Layout( title = legend["title"] )
        
        fig = Figure(data=data, layout=layout)
        if self._type_result == "jupyter-notebook":
            iplot(data, filename = 'pandas_table')
        elif self._type_result == "dash":
            return dcc.Graph(
                id='V009@2',
                figure={"data": data}
            )
        elif self._type_result == "flask":
            modeBarButtonsToRemove = ['toImage', 'sendDataToCloud', 'hoverCompareCartesian', 'lasso2d', 'hoverClosestCartesian', 'toggleHover', 'hoverClosest3d', 'hoverClosestGeo', 'hoverClosestGl2d', 'hoverClosestPie']
            config = {"displaylogo": False, "responsive": True, "displayModeBar": True, "modeBarButtonsToRemove": modeBarButtonsToRemove}
            return {"id":"V009@2","layout":json.dumps({"data": data, "layout": layout, "config": config}, cls=PlotlyJSONEncoder)}

    def graph_03(self):
        legend = {"title":"Número de interações por tempo do vídeo",
                    "xaxis":"Tempo do vídeo em segundos",
                    "yaxis":"Interação",
                }
        if (self._language == "en"):
            legend = {"title":"Number of interaction by video time",
                        "xaxis":"Video time in seconds",
                        "yaxis":"Interaction",
                    }

        dft = pd.read_csv("v009-PROC.csv")
        df = dft.set_index("Time")

        x = df.index.get_level_values(0).values
        color = ["rgb(100,100,100)","rgb(255,0,0)","rgb(127,0,127)","rgb(0,0,255)","rgb(0,127,127)","rgb(0,255,0)"]
        trace0 = dict(
            x=x,
            y=df.iloc[:,0].tolist(),
            hoverinfo='x+y',
            mode='lines',
            name='Play',
            text = ['Play'],
            line=dict(width=0.5,
                      color=color[5]),
            stackgroup='one'
        )
        trace1 = dict(
            x=x,
            y=df.iloc[:,1].tolist(),
            hoverinfo='x+y',
            mode='lines',
            name='Pause',
            text = ['Pause'],
            line=dict(width=0.5,
                      color=color[2]),
            stackgroup='one'
        )
        trace2 = dict(
            x=x,
            y=df.iloc[:,2].tolist(),
            hoverinfo='x+y',
            mode='lines',
            name='Seek backward',
            text = ['Seek backward'],
            line=dict(width=0.5,
                      color=color[1]),
            stackgroup='one'
        )
        trace3 = dict(
            x=x,
            y=df.iloc[:,3].tolist(),
            hoverinfo='x+y',
            mode='lines',
            name='Seek forward',
            text = ['Seek forward'],
            line=dict(width=0.5,
                      color=color[3]),
            stackgroup='one'
        )
        trace4 = dict(
            x=x,
            y=df.iloc[:,4].tolist(),
            hoverinfo='x+y',
            mode='lines',
            name='Dropout',
            text = ['Dropout'],
            line=dict(width=0.5,
                      color=color[0]),
            stackgroup='one'
        )

        layout = Layout(
            title=legend['title'],
            hovermode = "closest",
            showlegend = True,
            xaxis = dict(
                title = legend["xaxis"],
                titlefont=dict(
                    # family='Arial, sans-serif',
                    # size=18,
                    color='rgb(180,180,180)',
                ),
                # autorange = False,
                # fixedrange = False,
                # range = [0, self.DATASET["AVA Access"].max()+10],
                # rangemode = "normal",
                # zeroline= False,
                # showline = True,
            ),
            yaxis = dict(
                title = legend["yaxis"],
                titlefont=dict(
                    # family='Arial, sans-serif',
                    # size=18,
                    color='rgb(180,180,180)',
                ),
                # autorange = False,
                # fixedrange = False,
                # range = [0, self.DATASET["Predicted Grade"].max()+10],
                # rangemode = "normal",
                # showline = True,
            )
        )

        data = [trace0, trace1, trace2, trace3, trace4]
        fig = Figure(data=data, layout=layout)
        if self._type_result == "jupyter-notebook":
            iplot(fig, filename='stacked-area')
        elif self._type_result == "dash":
            return dcc.Graph(
                id='V009@3',
                figure=fig
            )
        elif self._type_result == "flask":
            modeBarButtonsToRemove = ['toImage', 'sendDataToCloud', 'hoverCompareCartesian', 'lasso2d', 'hoverClosestCartesian', 'toggleHover', 'hoverClosest3d', 'hoverClosestGeo', 'hoverClosestGl2d', 'hoverClosestPie']
            config = {"displaylogo": False, "responsive": True, "displayModeBar": True, "modeBarButtonsToRemove": modeBarButtonsToRemove}
            return {"id":"V009@3","layout":json.dumps({"data": data, "layout": layout, "config": config}, cls=PlotlyJSONEncoder)}

    def graph_04(self):
        trace1 = {
        "x": [0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0],
        "y": [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],
        "hoverinfo": "Tempo",
        "line": {
        "color": "#4E6766",
        "shape": "spline",
        "width": 3
        },
        "mode": "lines",
        "name": "",
        "type": "scatter"
        }
        trace2 = {
        "x": [0.0, 0.0208217656857, 0.0427606901725, 0.0658369751093, 0.0900692840647, 0.115474566361, 0.142067876875, 0.16986219293, 0.198868229588, 0.229094254754, 0.260545905707, 0.293226008781, 0.327134404057, 0.362267777066, 0.398619499569, 0.436179481594, 0.474934036939, 0.514865764367, 0.555953446732, 0.59817197021, 0.641492265696, 0.685881274353, 0.731301939058, 0.777713223333, 0.825070159027, 0.873323923783, 0.922421948912, 0.972308057999, 1.0229226361, 1.07420282906, 1.1260827719, 1.17849384504, 1.23136495644, 1.28462284744, 1.33819241983, 1.391997081, 1.44595910419, 1.5, 1.55404089581, 1.608002919, 1.66180758017, 1.71537715256, 1.76863504356, 1.82150615496, 1.8739172281, 1.92579717094, 1.9770773639, 2.027691942, 2.07757805109, 2.12667607622, 2.17492984097, 2.22228677667, 2.26869806094, 2.31411872565, 2.3585077343, 2.40182802979, 2.44404655327, 2.48513423563, 2.52506596306, 2.56382051841, 2.60138050043, 2.63773222293, 2.67286559594, 2.70677399122, 2.73945409429, 2.77090574525, 2.80113177041, 2.83013780707, 2.85793212313, 2.88452543364, 2.90993071594, 2.93416302489, 2.95723930983, 2.97917823431, 3.0, 3.0, 2.99305941144, 2.98574643661, 2.97805434163, 2.96997690531, 2.96150847788, 2.95264404104, 2.94337926902, 2.93371059014, 2.92363524842, 2.91315136476, 2.90225799707, 2.89095519865, 2.87924407431, 2.86712683348, 2.85460683947, 2.84168865435, 2.82837807854, 2.81468218442, 2.80060934326, 2.78616924477, 2.77137290855, 2.75623268698, 2.74076225889, 2.72497661366, 2.70889202541, 2.69252601703, 2.675897314, 2.65902578797, 2.64193239031, 2.62463907603, 2.60716871832, 2.58954501452, 2.57179238419, 2.55393586006, 2.536000973, 2.51801363194, 2.5, 2.48198636806, 2.463999027, 2.44606413994, 2.42820761581, 2.41045498548, 2.39283128168, 2.37536092397, 2.35806760969, 2.34097421203, 2.324102686, 2.30747398297, 2.29110797459, 2.27502338634, 2.25923774111, 2.24376731302, 2.22862709145, 2.21383075523, 2.19939065674, 2.18531781558, 2.17162192146, 2.15831134565, 2.14539316053, 2.13287316652, 2.12075592569, 2.10904480135, 2.09774200293, 2.08684863524, 2.07636475158, 2.06628940986, 2.05662073098, 2.04735595896, 2.03849152212, 2.03002309469, 2.02194565837, 2.01425356339, 2.00694058856, 2.0],
        "y": [0.0,  0.0351026399091,  0.0701655991063,  0.105147298692,  0.140004106847,  0.174690370867,  0.20915846374,  0.24335884624,  0.277240145431,  0.310749250387,  0.34383142582,  0.376430444171,  0.408488736527,  0.439947562589,  0.470747199641,  0.500827150304,  0.530126368544,  0.558583503173,  0.586137157799,  0.612726165846,  0.63828987904,  0.662768467393,  0.686103228483,  0.708236903536,  0.729113997573,  0.748681100661,  0.766887207136,  0.783684029524,  0.799026303778,  0.81287208243,  0.825183012268,  0.835924593226,  0.84506641531,  0.852582370594,  0.858450837571,  0.862654835441,  0.865182146332,  0.866025403784,  0.865182146332,  0.862654835441,  0.858450837571,  0.852582370594,  0.84506641531,  0.835924593226,  0.825183012268,  0.81287208243,  0.799026303778,  0.783684029524,  0.766887207136,  0.748681100661,  0.729113997573,  0.708236903536,  0.686103228483,  0.662768467393,  0.63828987904,  0.612726165846,  0.586137157799,  0.558583503173,  0.530126368544,  0.500827150304,  0.470747199641,  0.439947562589,  0.408488736527,  0.376430444171,  0.34383142582,  0.310749250387,  0.277240145431,  0.24335884624,  0.20915846374,  0.174690370867,  0.140004106847,  0.105147298692,  0.0701655991063,  0.0351026399091, 0.0, 0.0,  0.0117008799697,  0.0233885330354,  0.0350490995641,  0.0466680356158,  0.0582301236222,  0.0697194879132,  0.0811196154134,  0.0924133818105,  0.103583083462,  0.114610475273,  0.125476814724,  0.136162912176,  0.14664918753,  0.156915733214,  0.166942383435,  0.176708789515,  0.186194501058,  0.1953790526,  0.204242055282,  0.212763293013,  0.220922822464,  0.228701076161,  0.236078967845,  0.243037999191,  0.249560366887,  0.255629069045,  0.261228009841,  0.266342101259,  0.27095736081,  0.275061004089,  0.278641531075,  0.281688805103,  0.284194123531,  0.28615027919,  0.287551611814,  0.288394048777,  0.288675134595,  0.288394048777,  0.287551611814,  0.28615027919,  0.284194123531,  0.281688805103,  0.278641531075,  0.275061004089,  0.27095736081,  0.266342101259,  0.261228009841,  0.255629069045,  0.249560366887,  0.243037999191,  0.236078967845,  0.228701076161,  0.220922822464,  0.212763293013,  0.204242055282,  0.1953790526,  0.186194501058,  0.176708789515,  0.166942383435,  0.156915733214,  0.14664918753,  0.136162912176,  0.125476814724,  0.114610475273,  0.103583083462,  0.0924133818105,  0.0811196154134,  0.0697194879132,  0.0582301236222,  0.0466680356158,  0.0350490995641,  0.0233885330354,  0.0117008799697, 0.0, 0.0,  0.198914959485,  0.],
        "hoverinfo": "none",
        "line": {
        "color": "#C6DA20",
        "shape": "spline",
        "width": 1
        },
        "mode": "lines",
        "name": "",
        "type": "scatter"
        }
        trace3 = {
        "x": [0.0, 0.0416435313715, 0.0855213803451, 0.131673950219, 0.180138568129, 0.230949132723, 0.284135753749, 0.33972438586, 0.397736459175, 0.458188509507, 0.521091811414, 0.586452017562, 0.654268808115, 0.724535554132, 0.797238999137, 0.872358963189, 0.949868073879, 1.02973152873, 1.11190689346, 1.19634394042, 1.28298453139, 1.37176254871, 1.46260387812, 1.55542644667, 1.65014031805, 1.74664784757, 1.84484389782, 1.944616116, 2.04584527221, 2.14840565812, 2.25216554379, 2.35698769008, 2.46272991288, 2.56924569488, 2.67638483965, 2.783994162, 2.89191820837, 3.0, 3.10808179163, 3.216005838, 3.32361516035, 3.43075430512, 3.53727008712, 3.64301230992, 3.74783445621, 3.85159434188, 3.95415472779, 4.055383884, 4.15515610218, 4.25335215243, 4.34985968195, 4.44457355333, 4.53739612188, 4.62823745129, 4.71701546861, 4.80365605958, 4.88809310654, 4.97026847127, 5.05013192612, 5.12764103681, 5.20276100086, 5.27546444587, 5.34573119189, 5.41354798244, 5.47890818859, 5.54181149049, 5.60226354082, 5.66027561414, 5.71586424625, 5.76905086728, 5.81986143187, 5.86832604978, 5.91447861965, 5.95835646863, 6.0, 6.0, 5.97223764575, 5.94298574644, 5.91221736652, 5.87990762125, 5.84603391152, 5.81057616417, 5.77351707609, 5.73484236055, 5.69454099366, 5.65260545906, 5.60903198829, 5.56382079459, 5.51697629725, 5.46850733391, 5.41842735787, 5.36675461741, 5.31351231418, 5.25872873769, 5.20243737305, 5.14467697907, 5.0854916342, 5.02493074792, 4.96304903556, 4.89990645463, 4.83556810162, 4.77010406812, 4.703589256, 4.63610315186, 4.56772956126, 4.49855630414, 4.42867487328, 4.35818005808, 4.28716953675, 4.21574344023, 4.144003892, 4.07205452775, 4.0, 3.92794547225, 3.855996108, 3.78425655977, 3.71283046325, 3.64181994192, 3.57132512672, 3.50144369586, 3.43227043874, 3.36389684814, 3.296410744, 3.22989593188, 3.16443189838, 3.10009354537, 3.03695096444, 2.97506925208, 2.9145083658, 2.85532302093, 2.79756262695, 2.74127126231, 2.68648768582, 2.63324538259, 2.58157264213, 2.53149266609, 2.48302370275, 2.43617920541, 2.39096801171, 2.34739454094, 2.30545900634, 2.26515763945, 2.22648292391, 2.18942383583, 2.15396608848, 2.12009237875, 2.08778263348, 2.05701425356, 2.02776235425, 2.0, 2.0, ],
        "y": [0.0, 0.0702052798182, 0.140331198213, 0.210294597385, 0.280008213695, 0.349380741733, 0.418316927479, 0.48671769248, 0.554480290863, 0.621498500774, 0.68766285164, 0.752860888341, 0.816977473054, 0.879895125178, 0.941494399282, 1.00165430061, 1.06025273709, 1.11716700635, 1.1722743156, 1.22545233169, 1.27657975808, 1.32553693479, 1.37220645697, 1.41647380707, 1.45822799515, 1.49736220132, 1.53377441427, 1.56736805905, 1.59805260756, 1.62574416486, 1.65036602454, 1.67184918645, 1.69013283062, 1.70516474119, 1.71690167514, 1.72530967088, 1.73036429266, 1.73205080757, 1.73036429266, 1.72530967088, 1.71690167514, 1.70516474119, 1.69013283062, 1.67184918645, 1.65036602454, 1.62574416486, 1.59805260756, 1.56736805905, 1.53377441427, 1.49736220132, 1.45822799515, 1.41647380707, 1.37220645697, 1.32553693479, 1.27657975808, 1.22545233169, 1.1722743156, 1.11716700635, 1.06025273709, 1.00165430061, 0.941494399282, 0.879895125178, 0.816977473054, 0.752860888341, 0.68766285164, 0.621498500774, 0.554480290863, 0.48671769248, 0.418316927479, 0.349380741733, 0.280008213695, 0.210294597385, 0.140331198213, 0.0702052798182, 0.0, 0.0, 0.0468035198788, 0.0935541321418, 0.140196398257, 0.186672142463, 0.232920494489, 0.278877951653, 0.324478461654, 0.369653527242, 0.414332333849, 0.458441901093, 0.501907258894, 0.544651648703, 0.586596750118, 0.627662932855, 0.667769533739, 0.706835158058, 0.744778004231, 0.781516210398, 0.816968221128, 0.851053172054, 0.883691289858, 0.914804304644, 0.944315871382, 0.972151996765, 0.998241467547, 1.02251627618, 1.04491203937, 1.06536840504, 1.08382944324, 1.10024401636, 1.1145661243, 1.12675522041, 1.13677649413, 1.14460111676, 1.15020644725, 1.15357619511, 1.15470053838, 1.15357619511, 1.15020644725, 1.14460111676, 1.13677649413, 1.12675522041, 1.1145661243, 1.10024401636, 1.08382944324, 1.06536840504, 1.04491203937, 1.02251627618, 0.998241467547, 0.972151996765, 0.944315871382, 0.914804304644, 0.883691289858, 0.851053172054, 0.816968221128, 0.781516210398, 0.744778004231, 0.706835158058, 0.667769533739, 0.627662932855, 0.586596750118, 0.544651648703, 0.501907258894, 0.458441901093, 0.414332333849, 0.369653527242, 0.324478461654, 0.278877951653, 0.232920494489, 0.186672142463, 0.140196398257, 0.0935541321418, 0.0468035198788, 0.0, 0.0, ],
        "hoverinfo": "none",
        "line": {
        "color": "#C6DA20",
        "shape": "spline",
        "width": 1
        },
        "mode": "lines",
        "name": "",
        "type": "scatter"
        }
        trace4 = {
        "x": [0.0, 0.0485841199334, 0.0997749437359, 0.153619608588, 0.210161662818, 0.269440654843, 0.331491712707, 0.396345116836, 0.464025869038, 0.534553261092, 0.60794044665, 0.684194020489, 0.763313609467, 0.845291479821, 0.93011216566, 1.01775212372, 1.10817941953, 1.20135345019, 1.29722470904, 1.39573459716, 1.49681528662, 1.60038964016, 1.70637119114, 1.81466418778, 1.9251637044, 2.03775582216, 2.15231788079, 2.268718802, 2.38681948424, 2.5064732678, 2.62752646776, 2.74981897176, 2.87318489835, 2.9974533107, 3.12244897959, 3.24799318901, 3.37390457644, 3.5, 3.62609542356, 3.75200681099, 3.87755102041, 4.0025466893, 4.12681510165, 4.25018102824, 4.37247353224, 4.4935267322, 4.61318051576, 4.731281198, 4.84768211921, 4.96224417784, 5.0748362956, 5.18533581222, 5.29362880886, 5.39961035984, 5.50318471338, 5.60426540284, 5.70277529096, 5.79864654981, 5.89182058047, 5.98224787628, 6.06988783434, 6.15470852018, 6.23668639053, 6.31580597951, 6.39205955335, 6.46544673891, 6.53597413096, 6.60365488316, 6.66850828729, 6.73055934516, 6.78983833718, 6.84638039141, 6.90022505626, 6.95141588007, 7.0, 7.0, 6.96529705719, 6.92873218305, 6.89027170815, 6.84988452656, 6.8075423894, 6.76322020521, 6.71689634512, 6.66855295069, 6.61817624208, 6.56575682382, 6.51128998536, 6.45477599324, 6.39622037156, 6.33563416739, 6.27303419734, 6.20844327177, 6.14189039272, 6.07341092211, 6.00304671632, 5.93084622384, 5.85686454275, 5.7811634349, 5.70381129445, 5.62488306829, 5.54446012703, 5.46263008515, 5.37948657, 5.29512893983, 5.20966195157, 5.12319538017, 5.0358435916, 4.9477250726, 4.85896192093, 4.76967930029, 4.680004865, 4.59006815969, 4.5, 4.40993184031, 4.319995135, 4.23032069971, 4.14103807907, 4.0522749274, 3.9641564084, 3.87680461983, 3.79033804843, 3.70487106017, 3.62051343, 3.53736991485, 3.45553987297, 3.37511693171, 3.29618870555, 3.2188365651, 3.14313545725, 3.06915377616, 2.99695328368, 2.92658907789, 2.85810960728, 2.79155672823, 2.72696580266, 2.66436583261, 2.60377962844, 2.54522400676, 2.48871001464, 2.43424317618, 2.38182375792, 2.33144704931, 2.28310365488, 2.23677979479, 2.1924576106, 2.15011547344, 2.10972829185, 2.07126781695, 2.03470294281, 2.0, 2.0],
        "y": [0.0,  0.0819061597879,  0.163719731248,  0.245343696949,  0.326676249311,  0.407610865356,  0.488036415392,  0.567837307894,  0.646893672673,  0.725081584236,  0.802273326914,  0.878337703065,  0.95314038523,  1.02654431271,  1.0984101325,  1.16859668404,  1.2369615266,  1.3033615074,  1.3676533682,  1.42969438697,  1.48934305109,  1.54645975725,  1.60090753313,  1.65255277492,  1.70126599434,  1.74692256821,  1.78940348332,  1.82859606889,  1.86439470882,  1.89670152567,  1.92542702863,  1.95049071753,  1.97182163572,  1.98935886472,  2.00305195433,  2.0128612827,  2.01875834144,  2.02072594216,  2.01875834144,  2.0128612827,  2.00305195433,  1.98935886472,  1.97182163572,  1.95049071753,  1.92542702863,  1.89670152567,  1.86439470882,  1.82859606889,  1.78940348332,  1.74692256821,  1.70126599434,  1.65255277492,  1.60090753313,  1.54645975725,  1.48934305109,  1.42969438697,  1.3676533682,  1.3033615074,  1.2369615266,  1.16859668404,  1.0984101325,  1.02654431271,  0.95314038523,  0.878337703065,  0.802273326914,  0.725081584236,  0.646893672673,  0.567837307894,  0.488036415392,  0.407610865356,  0.326676249311,  0.245343696949,  0.163719731248,  0.0819061597879, 0.0, 0.0,  0.0585043998485,  0.116942665177,  0.175245497821,  0.233340178079,  0.291150618111,  0.348597439566,  0.405598077067,  0.462066909052,  0.517915417311,  0.573052376367,  0.627384073618,  0.680814560879,  0.733245937648,  0.784578666069,  0.834711917174,  0.883543947573,  0.930972505289,  0.976895262998,  1.02121027641,  1.06381646507,  1.10461411232,  1.1435053808,  1.18039483923,  1.21518999596,  1.24780183443,  1.27814534523,  1.30614004921,  1.3317105063,  1.35478680405,  1.37530502045,  1.39320765538,  1.40844402552,  1.42097061766,  1.43075139595,  1.43775805907,  1.44197024389,  1.44337567297,  1.44197024389,  1.43775805907,  1.43075139595,  1.42097061766,  1.40844402552,  1.39320765538,  1.37530502045,  1.35478680405,  1.3317105063,  1.30614004921,  1.27814534523,  1.24780183443,  1.21518999596,  1.18039483923,  1.1435053808,  1.10461411232,  1.06381646507,  1.02121027641,  0.976895262998,  0.930972505289,  0.883543947573,  0.834711917174,  0.784578666069,  0.733245937648,  0.680814560879,  0.627384073618,  0.573052376367,  0.517915417311,  0.462066909052,  0.405598077067,  0.348597439566,  0.291150618111,  0.233340178079,  0.175245497821,  0.116942665177,  0.0585043998485, 0.0, 0.0,  0.198914959485,  0.397605061602,  0.59583469259,  0.793356605468,  0.989912101578,  1.18523129452,  1.37903346203,  1.57102749078,  1.76091241886,  1.94837807965,  2.1331058503,  2.31476950699,  2.493036188,  2.66756746463,  2.83802051839,  3.00404942175,  3.16530651798,  3.32144389419,  3.47211493979,  3.61697598123,  3.75568798189,  3.88791829474,  4.01334245337,  4.13164598625,  4.24252623708,  4.34569417377,  4.4408761673,  4.52781572141,  4.60627513377,  4.67603706952,  4.73690602828,  4.78870968675,  4.83130010004,  4.86455474623,  4.88837740083,  4.90269882921,  4.90747728811,  4.90269882921,  4.88837740083,  4.86455474623,  4.83130010004,  4.78870968675,  4.73690602828,  4.67603706952,  4.60627513377,  4.52781572141,  4.4408761673,  4.34569417377,  4.24252623708,  4.13164598625,  4.01334245337,  3.88791829474,  3.75568798189,  3.61697598123,  3.47211493979,  3.32144389419,  3.16530651798,  3.00404942175,  2.83802051839,  2.66756746463,  2.493036188,  2.31476950699,  2.1331058503,  1.94837807965,  1.76091241886,  1.57102749078,  1.37903346203,  1.18523129452,  0.989912101578,  0.793356605468,  0.59583469259,  0.397605061602,  0.198914959485, 0.0],
        "hoverinfo": "none",
        "line": {
        "color": "#C6DA20",
        "shape": "spline",
        "width": 1
        },
        "mode": "lines",
        "name": "",
        "type": "scatter"
        }
        trace5 = {
        "x": [0.0, 0.0624652970572, 0.128282070518, 0.197510925328, 0.270207852194, 0.346423699084, 0.426203630624, 0.50958657879, 0.596604688763, 0.687282764261, 0.781637717122, 0.879678026343, 0.981403212172, 1.0868033312, 1.19585849871, 1.30853844478, 1.42480211082, 1.5445972931, 1.6678603402, 1.79451591063, 1.92447679709, 2.05764382306, 2.19390581717, 2.33313967, 2.47521047708, 2.61997177135, 2.76726584674, 2.916924174, 3.06876790831, 3.22260848717, 3.37824831569, 3.53548153512, 3.69409486931, 3.85386854232, 4.01457725948, 4.17599124301, 4.33787731256, 4.5, 4.66212268744, 4.82400875699, 4.98542274052, 5.14613145768, 5.30590513069, 5.46451846488, 5.62175168431, 5.77739151283, 5.93123209169, 6.083075826, 6.23273415326, 6.38002822865, 6.52478952292, 6.66686033, 6.80609418283, 6.94235617694, 7.07552320291, 7.20548408937, 7.3321396598, 7.4554027069, 7.57519788918, 7.69146155522, 7.80414150129, 7.9131966688, 8.01859678783, 8.12032197366, 8.21836228288, 8.31271723574, 8.40339531124, 8.49041342121, 8.57379636938, 8.65357630092, 8.72979214781, 8.80248907467, 8.87171792948, 8.93753470294, 9.0, 9.0, 8.95141588007, 8.90022505626, 8.84638039141, 8.78983833718, 8.73055934516, 8.66850828729, 8.60365488316, 8.53597413096, 8.46544673891, 8.39205955335, 8.31580597951, 8.23668639053, 8.15470852018, 8.06988783434, 7.98224787628, 7.89182058047, 7.79864654981, 7.70277529096, 7.60426540284, 7.50318471338, 7.39961035984, 7.29362880886, 7.18533581222, 7.0748362956, 6.96224417784, 6.84768211921, 6.731281198, 6.61318051576, 6.4935267322, 6.37247353224, 6.25018102824, 6.12681510165, 6.0025466893, 5.87755102041, 5.75200681099, 5.62609542356, 5.5, 5.37390457644, 5.24799318901, 5.12244897959, 4.9974533107, 4.87318489835, 4.74981897176, 4.62752646776, 4.5064732678, 4.38681948424, 4.268718802, 4.15231788079, 4.03775582216, 3.9251637044, 3.81466418778, 3.70637119114, 3.60038964016, 3.49681528662, 3.39573459716, 3.29722470904, 3.20135345019, 3.10817941953, 3.01775212372, 2.93011216566, 2.84529147982, 2.76331360947, 2.68419402049, 2.60794044665, 2.53455326109, 2.46402586904, 2.39634511684, 2.33149171271, 2.26944065484, 2.21016166282, 2.15361960859, 2.09977494374, 2.04858411993, 2.0, 2.0],
        "y": [0.0,  0.105307919727,  0.210496797319,  0.315441896077,  0.420012320542,  0.5240711126,  0.627475391219,  0.730076538721,  0.831720436294,  0.93224775116,  1.03149427746,  1.12929133251,  1.22546620958,  1.31984268777,  1.41224159892,  1.50248145091,  1.59037910563,  1.67575050952,  1.7584114734,  1.83817849754,  1.91486963712,  1.98830540218,  2.05830968545,  2.12471071061,  2.18734199272,  2.24604330198,  2.30066162141,  2.35105208857,  2.39707891133,  2.43861624729,  2.4755490368,  2.50777377968,  2.53519924593,  2.55774711178,  2.57535251271,  2.58796450632,  2.595546439,  2.59807621135,  2.595546439,  2.58796450632,  2.57535251271,  2.55774711178,  2.53519924593,  2.50777377968,  2.4755490368,  2.43861624729,  2.39707891133,  2.35105208857,  2.30066162141,  2.24604330198,  2.18734199272,  2.12471071061,  2.05830968545,  1.98830540218,  1.91486963712,  1.83817849754,  1.7584114734,  1.67575050952,  1.59037910563,  1.50248145091,  1.41224159892,  1.31984268777,  1.22546620958,  1.12929133251,  1.03149427746,  0.93224775116,  0.831720436294,  0.730076538721,  0.627475391219,  0.5240711126,  0.420012320542,  0.315441896077,  0.210496797319,  0.105307919727, 0.0, 0.0,  0.0819061597879,  0.163719731248,  0.245343696949,  0.326676249311,  0.407610865356,  0.488036415392,  0.567837307894,  0.646893672673,  0.725081584236,  0.802273326914,  0.878337703065,  0.95314038523,  1.02654431271,  1.0984101325,  1.16859668404,  1.2369615266,  1.3033615074,  1.3676533682,  1.42969438697,  1.48934305109,  1.54645975725,  1.60090753313,  1.65255277492,  1.70126599434,  1.74692256821,  1.78940348332,  1.82859606889,  1.86439470882,  1.89670152567,  1.92542702863,  1.95049071753,  1.97182163572,  1.98935886472,  2.00305195433,  2.0128612827,  2.01875834144,  2.02072594216,  2.01875834144,  2.0128612827,  2.00305195433,  1.98935886472,  1.97182163572,  1.95049071753,  1.92542702863,  1.89670152567,  1.86439470882,  1.82859606889,  1.78940348332,  1.74692256821,  1.70126599434,  1.65255277492,  1.60090753313,  1.54645975725,  1.48934305109,  1.42969438697,  1.3676533682,  1.3033615074,  1.2369615266,  1.16859668404,  1.0984101325,  1.02654431271,  0.95314038523,  0.878337703065,  0.802273326914,  0.725081584236,  0.646893672673,  0.567837307894,  0.488036415392,  0.407610865356,  0.326676249311,  0.245343696949,  0.163719731248,  0.0819061597879, 0.0, 0.0, ],
        "hoverinfo": "none",
        "line": {
        "color": "#C6DA20",
        "shape": "spline",
        "width": 1
        },
        "mode": "lines",
        "name": "",
        "type": "scatter"
        }
        trace6 = {
        "x": [0.0, 0.0624652970572, 0.128282070518, 0.197510925328, 0.270207852194, 0.346423699084, 0.426203630624, 0.50958657879, 0.596604688763, 0.687282764261, 0.781637717122, 0.879678026343, 0.981403212172, 1.0868033312, 1.19585849871, 1.30853844478, 1.42480211082, 1.5445972931, 1.6678603402, 1.79451591063, 1.92447679709, 2.05764382306, 2.19390581717, 2.33313967, 2.47521047708, 2.61997177135, 2.76726584674, 2.916924174, 3.06876790831, 3.22260848717, 3.37824831569, 3.53548153512, 3.69409486931, 3.85386854232, 4.01457725948, 4.17599124301, 4.33787731256, 4.5, 4.66212268744, 4.82400875699, 4.98542274052, 5.14613145768, 5.30590513069, 5.46451846488, 5.62175168431, 5.77739151283, 5.93123209169, 6.083075826, 6.23273415326, 6.38002822865, 6.52478952292, 6.66686033, 6.80609418283, 6.94235617694, 7.07552320291, 7.20548408937, 7.3321396598, 7.4554027069, 7.57519788918, 7.69146155522, 7.80414150129, 7.9131966688, 8.01859678783, 8.12032197366, 8.21836228288, 8.31271723574, 8.40339531124, 8.49041342121, 8.57379636938, 8.65357630092, 8.72979214781, 8.80248907467, 8.87171792948, 8.93753470294, 9.0, 9.0, 9.00694058856, 9.01425356339, 9.02194565837, 9.03002309469, 9.03849152212, 9.04735595896, 9.05662073098, 9.06628940986, 9.07636475158, 9.08684863524, 9.09774200293, 9.10904480135, 9.12075592569, 9.13287316652, 9.14539316053, 9.15831134565, 9.17162192146, 9.18531781558, 9.19939065674, 9.21383075523, 9.22862709145, 9.24376731302, 9.25923774111, 9.27502338634, 9.29110797459, 9.30747398297, 9.324102686, 9.34097421203, 9.35806760969, 9.37536092397, 9.39283128168, 9.41045498548, 9.42820761581, 9.44606413994, 9.463999027, 9.48198636806, 9.5, 9.51801363194, 9.536000973, 9.55393586006, 9.57179238419, 9.58954501452, 9.60716871832, 9.62463907603, 9.64193239031, 9.65902578797, 9.675897314, 9.69252601703, 9.70889202541, 9.72497661366, 9.74076225889, 9.75623268698, 9.77137290855, 9.78616924477, 9.80060934326, 9.81468218442, 9.82837807854, 9.84168865435, 9.85460683947, 9.86712683348, 9.87924407431, 9.89095519865, 9.90225799707, 9.91315136476, 9.92363524842, 9.93371059014, 9.94337926902, 9.95264404104, 9.96150847788, 9.96997690531, 9.97805434163, 9.98574643661, 9.99305941144, 10.0],
        "y": [0.0,  0.105307919727,  0.210496797319,  0.315441896077,  0.420012320542,  0.5240711126,  0.627475391219,  0.730076538721,  0.831720436294,  0.93224775116,  1.03149427746,  1.12929133251,  1.22546620958,  1.31984268777,  1.41224159892,  1.50248145091,  1.59037910563,  1.67575050952,  1.7584114734,  1.83817849754,  1.91486963712,  1.98830540218,  2.05830968545,  2.12471071061,  2.18734199272,  2.24604330198,  2.30066162141,  2.35105208857,  2.39707891133,  2.43861624729,  2.4755490368,  2.50777377968,  2.53519924593,  2.55774711178,  2.57535251271,  2.58796450632,  2.595546439,  2.59807621135,  2.595546439,  2.58796450632,  2.57535251271,  2.55774711178,  2.53519924593,  2.50777377968,  2.4755490368,  2.43861624729,  2.39707891133,  2.35105208857,  2.30066162141,  2.24604330198,  2.18734199272,  2.12471071061,  2.05830968545,  1.98830540218,  1.91486963712,  1.83817849754,  1.7584114734,  1.67575050952,  1.59037910563,  1.50248145091,  1.41224159892,  1.31984268777,  1.22546620958,  1.12929133251,  1.03149427746,  0.93224775116,  0.831720436294,  0.730076538721,  0.627475391219,  0.5240711126,  0.420012320542,  0.315441896077,  0.210496797319,  0.105307919727, 0.0, 0.0, 0.0117008799697, 0.0233885330354, 0.0350490995641, 0.0466680356158, 0.0582301236222, 0.0697194879132, 0.0811196154134, 0.0924133818105, 0.103583083462, 0.114610475273, 0.125476814724, 0.136162912176, 0.14664918753, 0.156915733214, 0.166942383435, 0.176708789515, 0.186194501058, 0.1953790526, 0.204242055282, 0.212763293013, 0.220922822464, 0.228701076161, 0.236078967845, 0.243037999191, 0.249560366887, 0.255629069045, 0.261228009841, 0.266342101259, 0.27095736081, 0.275061004089, 0.278641531075, 0.281688805103, 0.284194123531, 0.28615027919, 0.287551611814, 0.288394048777, 0.288675134595, 0.288394048777, 0.287551611814, 0.28615027919, 0.284194123531, 0.281688805103, 0.278641531075, 0.275061004089, 0.27095736081, 0.266342101259, 0.261228009841, 0.255629069045, 0.249560366887, 0.243037999191, 0.236078967845, 0.228701076161, 0.220922822464, 0.212763293013, 0.204242055282, 0.1953790526, 0.186194501058, 0.176708789515, 0.166942383435, 0.156915733214, 0.14664918753, 0.136162912176, 0.125476814724, 0.114610475273, 0.103583083462, 0.0924133818105, 0.0811196154134, 0.0697194879132, 0.0582301236222, 0.0466680356158, 0.0350490995641, 0.0233885330354, 0.0117008799697, 0.0, ],
        "hoverinfo": "none",
        "line": {
        "color": "#C6DA20",
        "shape": "spline",
        "width": 1
        },
        "mode": "lines",
        "name": "",
        "type": "scatter"
        }
        trace7 = {
        "x": [1.0, 1.5, 2.0],
        "y": [0.0, 0.25, 0.0],
        "hoverinfo": "none",
        "line": {
        "color": "#C6DA20",
        "shape": "spline",
        "width": 1
        },
        "mode": "lines",
        "name": "",
        "type": "scatter"
        }
        trace0 = {
        "x": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11],
        "y": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        "marker": {
        "color": "#1E152A",
        #"colorscale": [[0.25, "#FFE165"], [0.5, "#DE4242"], [0.75, "#84243B"], [1.0, "#412135]],
        "line": {
          "color": "rgb(50,50,50)",
          "width": 0.75
        },
        "showscale": False,
        "size": 12
        },
        "mode": "markers",
        "type": "scatter"
        }

        data = [trace1, trace2, trace3, trace4, trace5, trace6, trace7, trace0]

        layout = {

        "font": {"size": 10},
        "height": 475,
        "hovermode": "closest",
        "margin": {
        "r": 10,
        "t": 80,
        "b": 110,
        "l": 10
        },
        "showlegend": False,
        "title": "Alterar",
        "width": 800,
        "xaxis": {
        "anchor": "y",
        "showgrid": False,
        "showline": False,
        "tickangle": 50,
        "ticktext": ['0:00', '0:05', '0:10', '0:15', '0:20', '0:25', '0:30', '0:35', '0:40', '0:45', '0:50', '0:55'],
        "tickvals": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11],
        "zeroline": False
        },
        "yaxis": {
        "anchor": "x",
        "showgrid": False,
        "showline": False,
        "showticklabels": False,
        "zeroline": False
        }
        }

        fig = dict(data=data, layout=layout)
        plotly.offline.iplot(fig, filename='arc plot', validate=False)

    def graph_05(self):
        return html.Div([html.Div(className="row center", children=[
                                    html.H6(className="header center black-text", children=["Fluxo de seek forward e seek backward por tempo do vídeo"])
                                    ]),
                visdcc.Network(id='net',
                     data={
                             'nodes':[

                                     #{'id': 0, 'label': 'Cluster 1','color': '#5AB1BB', 'shape':'box', 'size':'5', 'level':'1'},
                                     #{'id': 1, 'label': 'Begin Season', 'color':'#5AB1BB', 'level':'1'},
                                    {'id':0, 'label': '00s', 'color':'rgb(200,200,200)', 'level':'1', 'shape':'circle', 'size':'5', 'x':0, 'y':0, 'font':{'size':18}},
                                    {'id':1, 'label': '01s', 'color':'rgb(200,200,200)', 'level':'1', 'shape':'circle', 'size':'5', 'x':50, 'y':0, 'font':{'size':18}},
                                    {'id':2, 'label': '02s', 'color':'rgb(200,200,200)', 'level':'1', 'shape':'circle', 'size':'5', 'x':100, 'y':0, 'font':{'size':18}},
                                    {'id':3, 'label': '03s', 'color':'rgb(200,200,200)', 'level':'1', 'shape':'circle', 'size':'5', 'x':150, 'y':0, 'font':{'size':18}},
                                    {'id':4, 'label': '04s', 'color':'rgb(200,200,200)', 'level':'1', 'shape':'circle', 'size':'5', 'x':200, 'y':0, 'font':{'size':18}},
                                    {'id':5, 'label': '05s', 'color':'rgb(200,200,200)', 'level':'1', 'shape':'circle', 'size':'5', 'x':250, 'y':0, 'font':{'size':18}},
                                    {'id':6, 'label': '06s', 'color':'rgb(200,200,200)', 'level':'1', 'shape':'circle', 'size':'5', 'x':300, 'y':0, 'font':{'size':18}},
                                    {'id':7, 'label': '07s', 'color':'rgb(200,200,200)', 'level':'1', 'shape':'circle', 'size':'5', 'x':350, 'y':0, 'font':{'size':18}},
                                    {'id':8, 'label': '08s', 'color':'rgb(200,200,200)', 'level':'1', 'shape':'circle', 'size':'5', 'x':400, 'y':0, 'font':{'size':18}},
                                    {'id':9, 'label': '09s', 'color':'rgb(200,200,200)', 'level':'1', 'shape':'circle', 'size':'5', 'x':450, 'y':0, 'font':{'size':18}},
                                    {'id':10, 'label': '10s', 'color':'rgb(200,200,200)', 'level':'1', 'shape':'circle', 'size':'5', 'x':500, 'y':0, 'font':{'size':18}},
                                    {'id':11, 'label': '11s', 'color':'rgb(200,200,200)', 'level':'1', 'shape':'circle', 'size':'5', 'x':550, 'y':0, 'font':{'size':18}},
                                    {'id':12, 'label': '12s', 'color':'rgb(200,200,200)', 'level':'1', 'shape':'circle', 'size':'5', 'x':600, 'y':0, 'font':{'size':18}},
                                    {'id':13, 'label': '13s', 'color':'rgb(200,200,200)', 'level':'1', 'shape':'circle', 'size':'5', 'x':650, 'y':0, 'font':{'size':18}},
                                    {'id':14, 'label': '14s', 'color':'rgb(200,200,200)', 'level':'1', 'shape':'circle', 'size':'5', 'x':700, 'y':0, 'font':{'size':18}},
                                    {'id':15, 'label': '15s', 'color':'rgb(200,200,200)', 'level':'1', 'shape':'circle', 'size':'5', 'x':750, 'y':0, 'font':{'size':18}},
                                    {'id':16, 'label': '16s', 'color':'rgb(200,200,200)', 'level':'1', 'shape':'circle', 'size':'5', 'x':800, 'y':0, 'font':{'size':18}},
                                    {'id':17, 'label': '17s', 'color':'rgb(200,200,200)', 'level':'1', 'shape':'circle', 'size':'5', 'x':850, 'y':0, 'font':{'size':18}},
                                    {'id':18, 'label': '18s', 'color':'rgb(200,200,200)', 'level':'1', 'shape':'circle', 'size':'5', 'x':900, 'y':0, 'font':{'size':18}},
                                    {'id':19, 'label': '19s', 'color':'rgb(200,200,200)', 'level':'1', 'shape':'circle', 'size':'5', 'x':950, 'y':0, 'font':{'size':18}},
                                    {'id':20, 'label': '20s', 'color':'rgb(200,200,200)', 'level':'1', 'shape':'circle', 'size':'5', 'x':1000, 'y':0, 'font':{'size':18}},
                                    {'id':21, 'label': '21s', 'color':'rgb(200,200,200)', 'level':'1', 'shape':'circle', 'size':'5', 'x':1050, 'y':0, 'font':{'size':18}},
                                    {'id':22, 'label': '22s', 'color':'rgb(200,200,200)', 'level':'1', 'shape':'circle', 'size':'5', 'x':1100, 'y':0, 'font':{'size':18}},
                                    {'id':23, 'label': '23s', 'color':'rgb(200,200,200)', 'level':'1', 'shape':'circle', 'size':'5', 'x':1150, 'y':0, 'font':{'size':18}},
                                    {'id':24, 'label': '24s', 'color':'rgb(200,200,200)', 'level':'1', 'shape':'circle', 'size':'5', 'x':1200, 'y':0, 'font':{'size':18}},
                                    {'id':25, 'label': '25s', 'color':'rgb(200,200,200)', 'level':'1', 'shape':'circle', 'size':'5', 'x':1250, 'y':0, 'font':{'size':18}},
                                    {'id':26, 'label': '26s', 'color':'rgb(200,200,200)', 'level':'1', 'shape':'circle', 'size':'5', 'x':1300, 'y':0, 'font':{'size':18}},
                                    {'id':27, 'label': '27s', 'color':'rgb(200,200,200)', 'level':'1', 'shape':'circle', 'size':'5', 'x':1350, 'y':0, 'font':{'size':18}},
                                    {'id':28, 'label': '28s', 'color':'rgb(200,200,200)', 'level':'1', 'shape':'circle', 'size':'5', 'x':1400, 'y':0, 'font':{'size':18}},
                                    {'id':29, 'label': '29s', 'color':'rgb(200,200,200)', 'level':'1', 'shape':'circle', 'size':'5', 'x':1450, 'y':0, 'font':{'size':18}}


                                    ],

                             'edges':[
                                    {'id':'1−8', 'arrows':'arrow.to','from': 1, 'to': 8, 'width':1,'color':{'color':'rgb(120,120,255)'}},
                                    {'id':'2−16', 'arrows':'arrow.to','from': 2, 'to': 16, 'width':1,'color':{'color':'rgb(120,120,255)'}},
                                    {'id':'3−25', 'arrows':'arrow.to','from': 3, 'to': 25, 'width':1,'color':{'color':'rgb(120,120,255)'}},
                                    {'id':'4−8', 'arrows':'arrow.to','from': 4, 'to': 8, 'width':1,'color':{'color':'rgb(120,120,255)'}},
                                    {'id':'6−2', 'arrows':'arrow.to','from': 6, 'to': 2, 'width':1,'color':{'color':'rgb(255,120,120)'}},
                                    {'id':'6−4', 'arrows':'arrow.to','from': 6, 'to': 4, 'width':1,'color':{'color':'rgb(255,120,120)'}},
                                    {'id':'6−23', 'arrows':'arrow.to','from': 6, 'to': 23, 'width':1,'color':{'color':'rgb(120,120,255)'}},
                                    {'id':'8−21', 'arrows':'arrow.to','from': 8, 'to': 21, 'width':1,'color':{'color':'rgb(120,120,255)'}},
                                    {'id':'9−13', 'arrows':'arrow.to','from': 9, 'to': 13, 'width':1,'color':{'color':'rgb(120,120,255)'}},
                                    {'id':'10−15', 'arrows':'arrow.to','from': 10, 'to': 15, 'width':1,'color':{'color':'rgb(120,120,255)'}},
                                    {'id':'11−18', 'arrows':'arrow.to','from': 11, 'to': 18, 'width':1,'color':{'color':'rgb(120,120,255)'}},
                                    {'id':'11−14', 'arrows':'arrow.to','from': 11, 'to': 14, 'width':1,'color':{'color':'rgb(120,120,255)'}},
                                    {'id':'11−15', 'arrows':'arrow.to','from': 11, 'to': 15, 'width':1,'color':{'color':'rgb(120,120,255)'}},
                                    {'id':'11−3', 'arrows':'arrow.to','from': 11, 'to': 3, 'width':1,'color':{'color':'rgb(255,120,120)'}},
                                    {'id':'13−12', 'arrows':'arrow.to','from': 13, 'to': 12, 'width':1,'color':{'color':'rgb(255,120,120)'}},
                                    {'id':'14−10', 'arrows':'arrow.to','from': 14, 'to': 10, 'width':1,'color':{'color':'rgb(255,120,120)'}},
                                    {'id':'14−4', 'arrows':'arrow.to','from': 14, 'to': 4, 'width':1,'color':{'color':'rgb(255,120,120)'}},
                                    {'id':'14−0', 'arrows':'arrow.to','from': 14, 'to': 0, 'width':1,'color':{'color':'rgb(255,120,120)'}},
                                    {'id':'15−16', 'arrows':'arrow.to','from': 15, 'to': 16, 'width':3,'color':{'color':'rgb(120,120,255)'}},
                                    {'id':'16−8', 'arrows':'arrow.to','from': 16, 'to': 8, 'width':1,'color':{'color':'rgb(255,120,120)'}},
                                    {'id':'16−13', 'arrows':'arrow.to','from': 16, 'to': 13, 'width':1,'color':{'color':'rgb(255,120,120)'}},
                                    {'id':'17−13', 'arrows':'arrow.to','from': 17, 'to': 13, 'width':1,'color':{'color':'rgb(255,120,120)'}},
                                    {'id':'17−11', 'arrows':'arrow.to','from': 17, 'to': 11, 'width':1,'color':{'color':'rgb(255,120,120)'}},
                                    {'id':'17−16', 'arrows':'arrow.to','from': 17, 'to': 16, 'width':1,'color':{'color':'rgb(255,120,120)'}},
                                    {'id':'17−19', 'arrows':'arrow.to','from': 17, 'to': 19, 'width':1,'color':{'color':'rgb(120,120,255)'}},
                                    {'id':'17−27', 'arrows':'arrow.to','from': 17, 'to': 27, 'width':1,'color':{'color':'rgb(120,120,255)'}},
                                    {'id':'17−18', 'arrows':'arrow.to','from': 17, 'to': 18, 'width':1,'color':{'color':'rgb(120,120,255)'}},
                                    {'id':'18−19', 'arrows':'arrow.to','from': 18, 'to': 19, 'width':1,'color':{'color':'rgb(120,120,255)'}},
                                    {'id':'18−15', 'arrows':'arrow.to','from': 18, 'to': 15, 'width':1,'color':{'color':'rgb(255,120,120)'}},
                                    {'id':'18−10', 'arrows':'arrow.to','from': 18, 'to': 10, 'width':1,'color':{'color':'rgb(255,120,120)'}},
                                    {'id':'20−18', 'arrows':'arrow.to','from': 20, 'to': 18, 'width':1,'color':{'color':'rgb(255,120,120)'}},
                                    {'id':'21−20', 'arrows':'arrow.to','from': 21, 'to': 20, 'width':1,'color':{'color':'rgb(255,120,120)'}},
                                    {'id':'21−4', 'arrows':'arrow.to','from': 21, 'to': 4, 'width':1,'color':{'color':'rgb(255,120,120)'}},
                                    {'id':'21−12', 'arrows':'arrow.to','from': 21, 'to': 12, 'width':1,'color':{'color':'rgb(255,120,120)'}},
                                    {'id':'21−14', 'arrows':'arrow.to','from': 21, 'to': 14, 'width':1,'color':{'color':'rgb(255,120,120)'}},
                                    {'id':'21−26', 'arrows':'arrow.to','from': 21, 'to': 26, 'width':1,'color':{'color':'rgb(120,120,255)'}},
                                    {'id':'22−2', 'arrows':'arrow.to','from': 22, 'to': 2, 'width':1,'color':{'color':'rgb(255,120,120)'}},
                                    {'id':'22−0', 'arrows':'arrow.to','from': 22, 'to': 0, 'width':1,'color':{'color':'rgb(255,120,120)'}},
                                    {'id':'22−21', 'arrows':'arrow.to','from': 22, 'to': 21, 'width':1,'color':{'color':'rgb(255,120,120)'}},
                                    {'id':'22−18', 'arrows':'arrow.to','from': 22, 'to': 18, 'width':1,'color':{'color':'rgb(255,120,120)'}},
                                    {'id':'22−19', 'arrows':'arrow.to','from': 22, 'to': 19, 'width':1,'color':{'color':'rgb(255,120,120)'}},
                                    {'id':'23−20', 'arrows':'arrow.to','from': 23, 'to': 20, 'width':1,'color':{'color':'rgb(255,120,120)'}},
                                    {'id':'23−6', 'arrows':'arrow.to','from': 23, 'to': 6, 'width':1,'color':{'color':'rgb(255,120,120)'}},
                                    {'id':'23−11', 'arrows':'arrow.to','from': 23, 'to': 11, 'width':1,'color':{'color':'rgb(255,120,120)'}},
                                    {'id':'23−27', 'arrows':'arrow.to','from': 23, 'to': 27, 'width':1,'color':{'color':'rgb(120,120,255)'}},
                                    {'id':'24−21', 'arrows':'arrow.to','from': 24, 'to': 21, 'width':1,'color':{'color':'rgb(255,120,120)'}},
                                    {'id':'25−17', 'arrows':'arrow.to','from': 25, 'to': 17, 'width':1,'color':{'color':'rgb(255,120,120)'}},
                                    {'id':'25−18', 'arrows':'arrow.to','from': 25, 'to': 18, 'width':1,'color':{'color':'rgb(255,120,120)'}},
                                    {'id':'26−15', 'arrows':'arrow.to','from': 26, 'to': 15, 'width':1,'color':{'color':'rgb(255,120,120)'}},
                                    {'id':'26−11', 'arrows':'arrow.to','from': 26, 'to': 11, 'width':1,'color':{'color':'rgb(255,120,120)'}},
                                    {'id':'26−16', 'arrows':'arrow.to','from': 26, 'to': 16, 'width':1,'color':{'color':'rgb(255,120,120)'}},
                                    {'id':'27−6', 'arrows':'arrow.to','from': 27, 'to': 6, 'width':1,'color':{'color':'rgb(255,120,120)'}},
                                    {'id':'27−9', 'arrows':'arrow.to','from': 27, 'to': 9, 'width':1,'color':{'color':'rgb(255,120,120)'}},
                                    {'id':'28−14', 'arrows':'arrow.to','from': 28, 'to': 14, 'width':1,'color':{'color':'rgb(255,120,120)'}},
                                    {'id':'28−21', 'arrows':'arrow.to','from': 28, 'to': 21, 'width':1,'color':{'color':'rgb(255,120,120)'}},

                                    {'id':'1-2','from': 1, 'to': 2,'color':{'color':'rgb(120,120,255)'}},
                                    {'id':'2-3','from': 2, 'to': 3,'color':{'color':'rgb(120,120,255)'}},
                                    {'id':'3-4','from': 3, 'to': 4,'color':{'color':'rgb(120,120,255)'}},
                                    {'id':'4-5','from': 4, 'to': 5,'color':{'color':'rgb(120,120,255)'}},
                                    {'id':'5-6','from': 5, 'to': 6,'color':{'color':'rgb(120,120,255)'}},
                                    {'id':'6-7','from': 6, 'to': 7,'color':{'color':'rgb(120,120,255)'}},
                                    {'id':'7-8','from': 7, 'to': 8,'color':{'color':'rgb(120,120,255)'}},
                                    {'id':'8-9','from': 8, 'to': 9,'color':{'color':'rgb(120,120,255)'}},
                                    {'id':'9-10','from': 9, 'to': 10,'color':{'color':'rgb(120,120,255)'}},
                                    {'id':'10-11','from': 10, 'to': 11,'color':{'color':'rgb(120,120,255)'}},
                                    {'id':'11-12','from': 11, 'to': 12,'color':{'color':'rgb(120,120,255)'}},
                                    {'id':'12-13','from': 12, 'to': 13,'color':{'color':'rgb(120,120,255)'}},
                                    {'id':'13-14','from': 13, 'to': 14,'color':{'color':'rgb(120,120,255)'}},
                                    {'id':'14-15','from': 14, 'to': 15,'color':{'color':'rgb(120,120,255)'}},
                                    {'id':'15-16','from': 15, 'to': 16,'color':{'color':'rgb(120,120,255)'}},
                                    {'id':'16-17','from': 16, 'to': 17,'color':{'color':'rgb(120,120,255)'}},
                                    {'id':'17-18','from': 17, 'to': 18,'color':{'color':'rgb(120,120,255)'}},
                                    {'id':'18-19','from': 18, 'to': 19,'color':{'color':'rgb(120,120,255)'}},
                                    {'id':'19-20','from': 19, 'to': 20,'color':{'color':'rgb(120,120,255)'}},
                                    {'id':'20-21','from': 20, 'to': 21,'color':{'color':'rgb(120,120,255)'}},
                                    {'id':'21-22','from': 21, 'to': 22,'color':{'color':'rgb(120,120,255)'}},
                                    {'id':'22-23','from': 22, 'to': 23,'color':{'color':'rgb(120,120,255)'}},
                                    {'id':'23-24','from': 23, 'to': 24,'color':{'color':'rgb(120,120,255)'}},
                                    {'id':'24-25','from': 24, 'to': 25,'color':{'color':'rgb(120,120,255)'}},
                                    {'id':'25-26','from': 25, 'to': 26,'color':{'color':'rgb(120,120,255)'}},
                                    {'id':'26-27','from': 26, 'to': 27,'color':{'color':'rgb(120,120,255)'}},
                                    {'id':'27-28','from': 27, 'to': 28,'color':{'color':'rgb(120,120,255)'}},
                                    {'id':'28-29','from': 28, 'to': 29,'color':{'color':'rgb(120,120,255)'}},
                                    {'id':'29-30','from': 29, 'to': 30,'color':{'color':'rgb(120,120,255)'}}

                                      ],
                     },

                     options={
                     'height':'600px',
                     'width':'100%',
                     'layout': {
                                'hierarchical': {
                                'enabled': False,
                                'sortMethod': 'directed',
                                'parentCentralization': True,
                                }
                     },
                     'physics':{'barnesHut': {'avoidOverlap': 0.4}},
                     #physics={'barnesHut': {'avoidOverlap': 0}},
                     'edges':{'arrows': {'to': {'enabled': True}},
                            'smooth': {'type': "curvedCW", 'forceDirection': 'vertical'}},
                     'nodes':{'fixed':{'x':True, 'y':True},'shape':'dot'},
                     'interaction':{'zoomView':False,'dragNodes':False,'dragView':False}
                     #fixed={'fixed.x':'true'}

                     }

                     ),
])

    def get_chart(self,id):
        if id == 1:
            return self.graph_01()
        elif id == 2:
            return self.graph_02()
        elif id == 3:
            return self.graph_03()
        elif id == 4:
            return self.graph_05()
        else:
            print("V009@"+str(id)+" not found")

    def print_all_graphs(self,language="pt"):
        self._language = language
        self.graph_01() #Raw Table
        self.graph_02() #Processed Table
        self.graph_03()
        # self.graph_04()
        self.graph_05()
